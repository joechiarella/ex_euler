defmodule Euler2 do
  require Integer

  @limit 4_000_000

  @moduledoc """
  Each new term in the Fibonacci sequence is generated by adding the previous two
  terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed
  four million, find the sum of the even-valued terms.

  ## Solution

    iex> Euler2.solve
    4613732

  """
  def solve do
    fib_sum(0, 1)
  end

  def fib_sum(prev, current)
      when current < @limit and Integer.is_even(current) do
    current + fib_sum(current, prev + current)
  end

  def fib_sum(prev, current)
      when current < @limit do
    fib_sum(current, prev + current)
  end

  def fib_sum(_, _), do: 0
end
